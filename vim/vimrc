" Vundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Let vundle manage vundle
Plugin 'gmarik/Vundle.vim'

"""""Plugins (Github)"""""
" Taglist plugin: show functions, etc
Plugin 'vim-scripts/taglist.vim'
" Most recent files plugin
Plugin 'vim-scripts/mru.vim'
" NerdTree
Plugin 'scrooloose/nerdtree'
" Jedi Vim
Plugin 'davidhalter/jedi-vim'
" Syntax checking
Plugin 'scrooloose/syntastic'
" Toggle comments, etc
Plugin 'tomtom/tcomment_vim'
" Similar to taglist, but with scope ordering
Plugin 'majutsushi/tagbar'
" Sublime Text Ctrl-D
Plugin 'terryma/vim-multiple-cursors'
" Git
Plugin 'tpope/vim-fugitive'
" vim-trailing-whitespace
Plugin 'bronson/vim-trailing-whitespace'
" Snippets
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'
" Flake8
Plugin 'nvie/vim-flake8'
" Status bar
Plugin 'bling/vim-airline'
" Git diff in the gutter
Plugin 'airblade/vim-gitgutter'
" Virtualenv
Plugin 'jmcantrell/vim-virtualenv'
" Base16 colorscheme
Plugin 'chriskempson/base16-vim'
" Bufferline (open files)
Plugin 'bling/vim-bufferline'
" Automatic parentheses, brackets, etc
Plugin 'Raimondi/delimitMate'
" Expand region selection
Plugin 'terryma/vim-expand-region'
" Replace/insert surrounding characters
Plugin 'tpope/vim-surround'
" Javascript and React
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'

call vundle#end()
filetype plugin indent on

" If a file is changed from the outside, set to autoread
set autoread

"""""INTERFACE, COLORS"""""

" Enable wildmenu: command line completion
set wildmenu
set wildignore=*.o,*~,*.pyc

" Command line height
set cmdheight=1

" Always show current position
set ruler

" Show line numbers
set number

" Syntax highlighting
syntax on

" Dark background
set background=dark

" Base16 colorscheme
set t_Co=256
let base16colorspace=256
colorscheme base16-ocean

set foldcolumn=1

"""""""""""SEARCH"""""""""""

" Highlight search
set hlsearch

" Ignore case when searching
set ignorecase

" When searching, be smart about cases
set smartcase

" Make search act like search in browsers
set incsearch

" For better regular expressions
set magic

""""""""TEXT, EDITING"""""""

" Make backspace act as it should
set backspace=eol,start,indent

" Wrap lines
set wrap

" Encoding
set encoding=utf8

" Unix = standard filetype
set ffs=unix,mac,dos

" abs are 4 spaces
set shiftwidth=4
set tabstop=4
set expandtab

" Be smart when using tabs
set smarttab

" Auto and smart indent
set autoindent
set smartindent

" Cursor in the middle of the screen when possible
set scrolloff=999

" Move through splits
nnoremap <C-k> <C-w><C-k>
nnoremap <C-l> <C-w><C-l>
nnoremap <C-j> <C-w><C-j>
nnoremap <C-h> <C-w><C-h>

" Cycle through buffers
nnoremap <C-n> :bnext<CR>
nnoremap <C-p> :bprevious<CR>

" Mouse
set mouse=a

" ctags
set tags=$HOME/.tags

" enable all Python syntax highlighting features
let python_highlight_all = 1

" Highlight current line and column
au WinLeave * set nocursorline nocursorcolumn
au WinEnter * set cursorline cursorcolumn
set cursorline cursorcolumn

let g:airline_powerline_fonts = 1
let g:airline_theme = 'base16'

autocmd Filetype html setlocal ts=2 sts=2 sw=2
autocmd Filetype ruby setlocal ts=2 sts=2 sw=2
autocmd Filetype javascript setlocal ts=2 sts=2 sw=2
autocmd Filetype python setlocal ts=4 sts=4 sw=4
autocmd Filetype c setlocal ts=2 sts=2 sw=2
